{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Consolas;}}
{\colortbl ;\red204\green108\blue29;\red217\green232\blue247;\red230\green230\blue250;\red18\green144\blue195;\red249\green250\blue244;\red30\green181\blue64;\red121\green171\blue255;\red242\green242\blue0;\red104\green151\blue187;\red23\green198\blue163;\red141\green218\blue248;\red167\green236\blue33;\red243\green236\blue121;\red128\green128\blue128;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qj\b\f0\fs22\lang9 Language:- \b0 language is a medium to communicate and express our feeling.\par
\b Programming Language:-   \b0 A language which is used to communicate with system or machine.\par
\b Q.1- What is java?\b0\par
java is a high level object oriented plateform independent multithreded language.\par
features of java :- \par

\pard 
{\pntext\f0 i.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pnlcrm{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\qj Simple language:- syntax in java is very easy and simple to understand.\par
{\pntext\f0 ii.\tab}Plateform independent:- java code can run in any operating systems Windows,linux, Mac    \tab etc. hence we call it as plateform independent laanguaage.\par
{\pntext\f0 iii.\tab}Object oriented:-oops is a desgine principle which helps us to connect real world entity with code instructions. which makes the code short and easy to understand.\par
{\pntext\f0 iv.\tab}Robust(Strong) :- java is a very strong it can handle huge applications without any virus attack.\par
{\pntext\f0 v.\tab}Secure:- java's secured features enable us to developes virus free application byte code add's an extra security layer.\par
{\pntext\f0 vi.\tab}Automated garbage collection:- java has a garbage collector which automatically delete's duplicate data, dereferenced data, unused data,unwanted data own its own.\par
{\pntext\f0 vii.\tab} Multithreded language:- \par

\pard\sa200\sl276\slmult1\qj\tab --> Multithreding  is a process of running multiple thred at the same time.\par
\tab --> Threds are the light weight sub process.\par
\tab --> Multi threding can improve the performance of application by allowing them to \tab\tab        multiple task at time.\par
\b\fs24 Arithmatic operator (+ , - , * , / , %) :-\par
\b0 Note:-\b  \b0 Divide prints the Qutient and Modulo prints the Remainder.\par
\b --> '' + '' (\b0 two behaves-Addition, Concatination)\par
1--> When we use without string value it behaves like 'ADDITION'.\par
2--> When we use with string value it behaves like 'CONCATINATION' (concatination means same or as it as value return).\par
Note:- we can not perform addition operation with boolean type of data but we can perform concatination opertion.\par

\pard\sa200\sl276\slmult1\b Ex:-\par
 \cf1\b0\f1\fs20 package\cf2  box1\cf3 ;\cf0\par
\cf1 public\cf2  \cf1 class\cf2  \cf4 scanner\cf2  \cf5\{\cf0\par
\cf2\tab\cf1 public\cf2  \cf1 static\cf2  \cf1 void\cf2  \cf6 main\cf5 (\cf4 String\cf5 []\cf2  \cf7 args\cf5 )\cf2  \cf5\{\cf0\par
\cf2\tab\tab\cf1 int\cf2  \cf8 n\cf2  \cf3 =\cf9 25\cf3 ;\cf0\par
\cf2\tab\tab\cf1 int\cf2  \cf8 m\cf2  \cf3 =\cf9 15\cf3 ;\cf0\par
\cf2\tab\tab\cf4 String\cf2  \cf8 s\cf3 =\cf2  \cf10 "Subhash"\cf3 ;\cf0\par
\cf2\tab\tab\cf1 boolean\cf2  \cf8 b\cf2  \cf3 =\cf1 true\cf3 ;\cf0\par
\cf2\tab\tab\cf1 char\cf2  \cf8 ch\cf2  \cf3 =\cf10 'Z'\cf3 ;\cf0\par
\cf2\tab\tab\cf1 double\cf2  \cf8 d\cf3 =\cf2  \cf9 62.14\cf3 ;\cf0\par
\cf2\tab\tab\cf4 System\cf3 .\cf11\b\i out\cf3\b0\i0 .\cf12 println\cf5 (\cf13\ul n\cf3 +\cf13 b\cf3\ulnone +\cf13 s\cf3 +\cf13 m\cf3 +\cf13 n\cf5 )\cf3 ;\cf2  \cf14 // compile time error.\cf0\par
\cf2\tab\tab\cf4 System\cf3 .\cf11\b\i out\cf3\b0\i0 .\cf12 println\cf5 (\cf13 n\cf3 +\cf13 m\cf3 +\cf13 s\cf3 +\cf13 b\cf3 +\cf13 n\cf3 +\cf13 m\cf3 +\cf9 67\cf3 +\cf10 'F'\cf3 +\cf10 "Nidhu"\cf5 )\cf3 ;\cf0\par
\cf2\tab\tab\cf4 System\cf3 .\cf11\b\i out\cf3\b0\i0 .\cf12 println\cf5 (\cf9\ul 60\cf3 +\cf1 true\cf5\ulnone )\cf3 ;\cf2  \cf14 // compile time error. because we can't addition boolean type data. \cf0\par
\cf2\tab\tab\cf4 System\cf3 .\cf11\b\i out\cf3\b0\i0 .\cf12 println\cf5 (\cf10 "Nidhu"\cf3 +\cf1 true\cf5 )\cf3 ;\cf0\par
\cf2\tab\tab\cf4 System\cf3 .\cf11\b\i out\cf3\b0\i0 .\cf12 println\cf5 (\cf13 n\cf3 +\cf13 m\cf3 +\cf13 ch\cf3 +\cf13 s\cf3 +\cf13 b\cf3 +\cf13 n\cf3 +\cf13 m\cf3 +\cf13 ch\cf3 +\cf13 d\cf5 )\cf3 ;\cf0\par
\cf2\tab\cf5\}\cf0\par
\b\f0\fs24 Relational operator ( < , > , <= , >= , == , != ) :-\par
\b0 Note:- All the relational operator gives boolean results.\par
\b Logical operator\{ &&(AND) ,||(OR) , !(NOT) \} :-\par
\b0 Condition:- is an expression which gives boolean result. we called it as condition.\par
&&(AND) if both the condition are true the result is true.\par
||(OR) if any one condition is true then the result is true.\par
!(NOT) both are inverse.\par
\b Assignment operator(  = , == ) :-\par
\b0 '=' is used to assign the value. like int a = 1 \par
'==' is used to compare two value it gives boolean result. like 50==50 output 'true'\par
Note:-\fs22 changes of value those who are assigned before.\fs24\par
\fs22 package box2;\par
public class Stephan \{\par
\tab public static void main(String[] args) \{\par
\tab\tab int x = 50;  //arthimatic\par
\tab\tab System.out.println(x+70); //120\par
\tab\tab System.out.println(x);  //50\par
\tab\tab System.out.println("-------");\par
\tab\tab int a = 50;   //assignment\par
\tab\tab System.out.println(a+=70); //  a=(a+70)\par
\tab\tab System.out.println(a);   //120\par
\tab\tab System.out.println("---------");\par
\tab\tab int b =55;\par
\tab\tab System.out.println(b+=20);\par
\tab\tab System.out.println(b-=50);\par
\tab\tab System.out.println("-------");\par
\tab\tab int m= 25;\par
\tab     int n= (m*=4);     // n=25*4\par
\tab     int o=(n/=5);       // o=100/5\par
\tab     int p=(m+n+o);  // (25+100+50)\par
\tab     System.out.println(p);\par
\tab\tab System.out.println("--------");\par
\tab\tab int c=35;\par
\tab\tab int d=75;\par
\tab\tab int e=125;\par
\tab\tab int f=175;\par
\tab\tab int g=15;\par
\tab\tab System.out.println(c+=50);  //c=35+50\par
\tab\tab System.out.println(d-=100);\par
\tab\tab System.out.println(e*=2);\par
\tab\tab System.out.println(f%=5);\par
\tab\tab System.out.println(g/=3);\par
\tab\tab System.out.println("------");\par
\tab\tab System.out.println(c);\par
\tab\tab System.out.println(d);\par
\tab\tab System.out.println(e);\par
\tab\tab System.out.println(f);\par
\tab\tab System.out.println(g);\par
\tab\tab System.out.println("--------");\par
\tab\tab int h=20;\par
\tab\tab System.out.println(h+='A');\par
\tab\tab System.out.println(h);\par
\tab\tab h-=100;\par
\tab\tab h+='Z';\par
\tab\tab h*=2;\par
\tab\tab System.out.println(h);\par
\tab\tab System.out.println("------");\par
\tab\tab int i=65;\par
\tab\tab int j=-45;\par
\tab\tab System.out.println(i+=30);\par
\tab\tab System.out.println(j-=30);\par
\tab\tab i+=j;\par
\tab\tab j*=i;\par
\tab\tab System.out.println(i);\par
\tab\tab System.out.println(j);\par
\tab\tab System.out.println("------");\par
\tab\tab int k=35;\par
\tab\tab int l=-20;\par
\tab\tab k+=l;\par
\tab\tab l*=5;\par
\tab\tab k/=2;\par
\tab\tab System.out.println(k+l);\par
\tab\tab System.out.println("-------");\par
\tab\tab int q=75;\par
\tab\tab int r=-10;\par
\tab\tab q+='A';\par
\tab\tab r-='Z';\par
\tab\tab q*=2;\par
\tab\tab r/=5;\par
\tab\tab int s=(q+r)+20+('A'-50);\par
\tab\tab System.out.println(s);\par
\tab\tab System.out.println("-------");\par
\tab\}\par
\par
\}\par
\b Unary operator ( ++ , -- ):-\par
\b0 '++'  two behaves if it written after that is called post increment-(a++) and it written before is called  pre increment- (++a).  \par
\b\fs24\par

\pard\sa200\sl276\slmult1\qj\b0\fs22 package box2;{\object\objemb{\*\objclass Equation.3}\objw180\objh340{\*\objdata 
01050000
02000000
0b000000
4571756174696f6e2e3300
00000000
00000000
000e0000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000
0000000000010000000100000000000000001000000200000001000000feffffff000000000000
0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffdffffff04000000feffffff05000000fefffffffeffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000016000500
ffffffffffffffff0200000002ce020000000000c0000000000000460000000000000000000000
0010233d87f2a1db0103000000400200000000000001004f006c00650000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000a000201ffffffffffffffffffffffff00000000000000000000000000000000
0000000000000000000000000000000000000000000000001400000000000000010043006f006d
0070004f0062006a00000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000066000000
0000000002004f006c006500500072006500730030003000300000000000000000000000000000
000000000000000000000000000000000000000000000000000000000018000200ffffffffffff
ffffffffffff000000000000000000000000000000000000000000000000000000000000000000
00000003000000ca00000000000000feffffff02000000feffffff040000000500000006000000
fefffffffefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff01000002000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000100feff030a0000ffffffff02ce020000000000c000000000000046170000004d
6963726f736f6674204571756174696f6e20332e30000c0000004453204571756174696f6e000b
0000004571756174696f6e2e3300f439b271000000000000000000000000000000000000000000
0000000000000000000000000000000000ffffffff030000000400000001000000ffffffff0000
0000000000003d01000057020000a2000000010009000003510000000000120000000000050000
0009020000000005000000020101000000050000000102ffffff00050000002e01180000000500
00000b0200000000050000000c02200220011200000026060f001a00ffffffff000010000000c0
ffffffa6ffffffe0000000c60100000b00000026060f000c004d61746854797065000050000a00
000026060f000a00ffffffff010000000000030000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
010000000000000001000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000005200690063006800450064006900
740046006c00610067007300000000000000000000000000000000000000000000000000000000
00000000000000000000001c0002010300000005000000ffffffff000000000000000000000000
000000000000000000000000000000000000000000000000070000000c00000000000000450071
0075006100740069006f006e0020004e0061007400690076006500000000000000000000000000
0000000000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000008000000
230000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000ffff
ffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000001c0000000200c2c207
00000000000000400e63000406630000000000030101030a0a0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000
01050000
05000000
0d000000
4d45544146494c455049435400
3d010000
a9fdffff
aa000000
08003d0157020000
010009000003510000000000120000000000050000000902000000000500000002010100000005
0000000102ffffff00050000002e0118000000050000000b0200000000050000000c0220022001
1200000026060f001a00ffffffff000010000000c0ffffffa6ffffffe0000000c60100000b0000
0026060f000c004d61746854797065000050000a00000026060f000a00ffffffff010000000000
030000000000
}{\result{\pict{\*\picprop}\wmetafile8\picw180\pich340\picwgoal180\pichgoal340 
010009000003510000000000120000000000050000000902000000000500000002010100000005
0000000102ffffff00050000002e0118000000050000000b0200000000050000000c0220022001
1200000026060f001a00ffffffff000010000000c0ffffffa6ffffffe0000000c60100000b0000
0026060f000c004d61746854797065000050000a00000026060f000a00ffffffff010000000000
030000000000
}}}\par

\pard\sa200\sl276\slmult1 // Conditional statement or decision making statement.\par
// decision making statement helps the programmer to decide whether a set of instruction should get executed or skip.\par
//1:-simple if\par
//2:-if else\par
//3:-if else if ladder\par
//4:-nested if\par
//5:-switch--a-normal\par
           //b-advance\par
\par
\par
//Simple if \par
//syntax:-if(condition)\par
         //\{\par
\tab\tab\tab //set of instruction\par
\tab\tab //\}\par
\par
\par
public class Conditional \{\par
public static void main(String[] args) \{\par
\tab System.out.println("Main start");\par
\tab int age =20;\par
\tab if (age>=18)\par
\tab\{\par
\tab\tab System.out.println("Eligible for votting");\par
\tab\}\par
\tab System.out.println("Main end");\par
\tab System.out.println("-------");\par
\tab\par
\tab System.out.println("main start");\par
\tab int ag =16;\par
\tab if(ag>=18)\par
\tab\{\par
\tab\tab System.out.println("eligible for votting");\par
\tab\}\par
\tab System.out.println("main end");\par
\}\par
\}\par
\par
\par
package box2;\par
\par
import java.util.Scanner;\par
\par
public class Ex_scanner \{\par
public static void main(String[] args) \{\par
\tab Scanner sc = new Scanner(System.in);\par
\tab System.out.println("Enter your name");\par
\tab String n = sc.next(); // for full name we can use nextLine();\par
\tab\par
\tab System.out.println("Enter age");\par
\tab int age = sc.nextInt();\par
\tab\par
\tab System.out.println("Enter gender");\par
\tab String gen = sc.next();\par
\tab\par
\tab System.out.println("Enter percentage");\par
\tab double per=sc.nextDouble();\par
\tab\par
\tab System.out.println("---------");\par
\tab\par
\tab System.out.println("Student name is "+n);\par
\tab System.out.println("Student age is "+age);\par
\tab System.out.println("Gender is "+gen);\par
\tab System.out.println("Percentage is "+per+"%"); // if we want to print special character so we have to write as like.\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // but if we want in between that time  we have to write in string value type data.\par
\}\par
\}\par
\par
\par
package box2;\par
//unary operator\par
public class Fast_furious1 \{\par
\tab public static void main(String[] args) \{\par
\tab\par
      int a=20;\par
      int b=a++ + ++a;\par
      System.out.println(a);//22\par
      System.out.println(b);//42\par
      System.out.println("-------");\par
      \par
      int c=15;\par
      int d=++c + c++ + c++;\par
      System.out.println(c);//18\par
      System.out.println(d);//49\par
      System.out.println("-------");\par
      \par
      int e=10;\par
      int f=5;\par
      int g=e++ - f-- + --f + e++ + ++e;\par
      int h=g++ - --f - --e + g--;\par
      System.out.println(e+f+g+h);//97\par
      System.out.println("-------");\par
\tab\}\par
\}\par
\par
\par
package box2;\par
\par
public class For_loop_even_no \{\par
public static void main(String[] args) \{\par
\tab  for(int i=1; i<=20; i+=2) \{\par
\tab\tab  if(i%2==0) \{\par
\tab\tab  System.out.println(i);\par
\}\par
\}\par
\}\par
\}\par
\par
\par
package box2;\par
\par
public class Forloop_ex2 \{\par
public static void main(String[] args) \{\par
\tab for(int i=5; i<=50; i++) \{   // another way (i=5; i<=50; i+=5) and we have to remove if condition.\par
\tab\tab if(i%5==0)\par
\tab\tab\{\par
\tab\tab\tab System.out.println(i);\par
\tab\tab\}\par
\tab\}\par
\}\par
\}\par
\par
\par
package box2;\par
// if else condition\par
//syntax :- if(condition)\par
//\{ //set of instruction 1\par
// \}else\par
// \{//set of instruction 2\par
// \}\par
\par
\par
public class If_Else_Condition \{\par
public static void main(String[] args) \{\par
\tab int age =17;\par
\tab if (age>=18) \{\par
\tab\tab System.out.println("eligible for marrige");\par
\tab\}else \{\par
\tab\tab System.out.println("have patience");\par
\tab\}\par
\tab System.out.println("-------");\par
\tab\par
\tab int a=18;\par
\tab int b=20;\par
\tab if (a>b) \{\par
\tab\tab System.out.println(a+ " is greater");\par
\tab\}else \{\par
\tab\tab System.out.println();\par
\tab\}\par
\}\par
\}\par
\par
\par
package box2;\par
//if else if ladder:-\par
// syntax:- if (condition 1)\par
         //\{//set of instruction 1\par
         //\}else\{if(condition 2)\par
         //\{//set of instruction 2\par
         //\}else if (condition 3)\par
         //\{// set of instruction 3\par
         //\}else\{\par
\tab\tab // default set of instruction\par
\tab\tab //\tab\}\par
\par
\par
public class If_else_if_ladder \{\par
public static void main(String[] args) \{\par
\tab char gen ='F';   // value can be change by our choice.\par
\tab if (gen=='M') \{\par
\tab\tab System.out.println("person is mard");\par
\tab\}else if (gen=='F') \{\par
\tab\tab System.out.println("person is stree");\par
\tab\}else if(gen=='O') \{\par
\tab\tab System.out.println("orry wale log");\par
\tab\}else \{\par
\tab\tab System.out.println("invalid gender");\par
\tab\}\par
\tab System.out.println("---------");\par
\tab\par
\tab int day=1;     // value can be change by our choice.\par
\tab if(day==1)\{\par
\tab\tab System.out.println("sunday");\par
\tab\}else if (day==2) \{\par
\tab\tab System.out.println("monday");\par
\tab\}else if (day==3) \{\par
\tab\tab System.out.println("tuesday");\par
\tab\}else if (day==4) \{\par
\tab\tab System.out.println("wednesday");\par
\tab\}else if (day==5) \{\par
\tab\tab System.out.println("thursday");\par
\tab\}else if (day==6) \{\par
\tab\tab System.out.println("friday");\par
\tab\}else if (day==7) \{\par
\tab\tab System.out.println("saturday");\par
\tab\}else \{\par
\tab\tab System.out.println("invalid day");\par
\tab\}\par
\}\par
\}\par
\par
\par
package box2;\par
// looping statement:- Whenever we use to repeat the task again\par
public class Looping_statement \{\par
public static void main(String[] args) \{\par
\tab\par
\tab for(int i=1; i<=10; i++) \{  //for 1-10 print we use it. but if we use decreasing order then we can write( int i=10;i>=10;i--)\par
\tab System.out.println(i+" Maggie..");\par
\}\par
\}\par
\}\par
\par
\par
package box2;\par
// Nested if\par
// syntax:- if(condition1)\par
//\tab\tab\tab   \{if (condition2)\{\par
//\tab\tab\tab\tab //set of instruction 1\par
//\tab\tab\tab   \}else\{\par
//\tab\tab\tab\tab //set of instruction 2\par
//\tab\tab\tab\tab\}\par
//\tab\tab\tab\tab\}else\{\par
//\tab\tab\tab\tab\tab //set of instruction 3\par
//\tab\tab\tab\tab\}\par
\par
\par
public class Nested_if \{\par
\tab public static void main(String[] args) \{\par
\tab\tab\par
\tab String email = "Subhashpatidar0401@gmail.com";\par
\tab int pass = 123456;\par
\tab\par
\tab if(email=="Subhashpatidar0401@gmail.com")\par
\tab\{\par
\tab\tab if(pass==123456)\par
\tab\tab\{System.out.println("login successful");\par
\tab\tab\}\par
\tab\tab else \{\par
\tab\tab\tab System.out.println("wrong password");\par
\tab\tab\}\par
\tab\}\par
\tab else \{\par
\tab\tab System.out.println("invalid email");\par
\tab\}\par
\tab System.out.println("-------");\par
\tab\par
\tab\par
\tab // nested if and if ladder \par
\tab int a=30;\par
\tab int b=25;\par
\tab int c=35;\par
\tab if (a>b) \{\par
\tab\tab if (a>c) \{\par
\tab\tab\tab System.out.println(a+ " is largest");\par
\tab\tab\}else  \{\par
\tab\tab\tab System.out.println(c+ " is largest");\par
\tab\tab\}\par
\tab\}else if (b>c) \{\par
\tab\tab System.out.println(b+" is largest");\par
\tab\}else \{\par
\tab\tab System.out.println(c+" is largest");\par
\tab\}\par
\tab System.out.println("-------");\par
\tab\par
\tab\par
\tab // && operator uses\par
\tab int x=7, y=21, z=32;\par
\tab if (x>y && x>z) \{\par
\tab\tab System.out.println(x+" is largest");\par
\tab\}else if(y>x && y>z) \{\par
\tab\tab System.out.println(y+" is largest");\par
\tab\}else \{\par
\tab\tab System.out.println(z+" is largest");\par
\tab\}\par
\}\par
\}\par
\par
\par
package box2;\par
// Unary operator\par
//[++]\par
public class Rogers \{\par
public static void main(String[] args) \{\par
 //post increment\par
\tab int a =20;\par
\tab int b =a++;\par
\tab System.out.println(a);//21\par
\tab System.out.println(b);//20\par
    // first assign the value then increase the value by 1 (a++)\par
\tab System.out.println("------");\par
\tab\par
 //pre increment \par
\tab int c=20;\par
\tab int d=++c;\par
\tab System.out.println(c);//21\par
\tab System.out.println(d);//21\par
\tab // first increase the value by 1 then assign the value(++c)\par
\tab System.out.println("------");\par
\tab\par
//[--]\par
 //post decrement\par
\tab int e=30;\par
\tab int f=e--;\par
\tab System.out.println(e);//29\par
\tab System.out.println(f);//30\par
\tab //first assign the value then decrease the value by 1(e--)\par
\tab System.out.println("------");\par
 \par
 //pre decrement\par
\tab int g=15;\par
\tab int h=--g;\par
\tab System.out.println(g);//14\par
\tab System.out.println(h);//14\par
\tab //first decrease the value by 1 then assign the value (--g)\par
\tab System.out.println("------");\par
\}\par
\}\par
\par
\par
package box2;\par
\par
import java.util.Scanner;\par
\par
// scanner class is used for the import the data from others.\par
//1:- Scanner class \par
//2:- Reader class\par
//  step:-1 import java.util.scanner;\par
//  step:-2 scanner sc = new scanner(system.in)\par
// various methods to read value\par
// string- sc.next(); //single word string value\par
// int-    sc.nextInt(); // i in upper case\par
// double- sc.nextDouble();\par
// long-   sc.nextLong();\par
// char-   sc.next().charAt(0);\par
// string full line- sc.nextLine();\par
  \par
\par
\par
public class Scanner_class \{\par
public static void main(String[] args) \{\par
\tab System.out.println("Main start");\par
\tab Scanner sc = new Scanner(System.in);\par
\tab System.out.println("enter 1st number");\par
\tab int a= sc.nextInt();\par
\tab\par
\tab System.out.println("enter 2nd number");\par
\tab int b= sc.nextInt();\par
\tab\par
\tab System.out.println("enter 3rd number");\par
\tab int c= sc.nextInt();\par
\tab\par
\tab System.out.println("---------");\par
\tab\par
\tab int max = (a>b)? ((a>c)?a:c):((b>c)?b:c);\par
\tab System.out.println("max num is " +max);\par
\tab\par
\tab System.out.println("main end");\par
\}\par
\}\par
\par
\par
\par
\par
package box2;\par
\par
public class Subhash \{\par
\par
\tab public static void main(String[] args) \{\par
\tab\tab String a= "Subhash Patidar";\par
\tab\tab String b= "Male";\par
\tab\tab int c= 25;\par
\tab\tab int x= 10;\par
\tab\tab int y= 20;\par
\tab\tab int z= 30;\par
\tab\tab\par
\tab  System.out.println("Hello Sir");\par
\tab  System.out.println("My name is " +a);\par
\tab  System.out.println("Gender is " +b);\par
\tab  System.out.println("Age is " +c);\par
\tab  System.out.println(x+y+z);\par
\tab  System.out.println(x+y+z+a);\par
\tab  System.out.println(2+(2*2)*2/2+2);\par
\tab  \par
\par
\tab\}\par
\par
\}\par
\par
\par
package box2;\par
// Switch is classified into two parts 1-normal, 2-advance\par
// syntax:- Switch (choice/variable/expression)\par
//\{\par
// case1: //set of instruction1\par
// break;\par
// case: //set of instruction2\par
// break;\par
// case: //set of instruction3\par
// break;\par
// default://default set of instruction\par
//\}\par
\par
\par
\par
public class Switch_condition \{\par
public static void main(String[] args) \{\par
\tab char gen='m';\par
\tab switch(gen)\par
\tab\{\par
\tab case 'M','m' : System.out.println("person is mard");\par
\tab break;\par
\tab case 'F','f' : System.out.println("person is stree");\par
\tab break;\par
\tab case 'O','o' : System.out.println("orry wale log");\par
\tab break;\par
\tab default : System.out.println("invalid gen");\par
\tab\}\par
\tab System.out.println("------");\par
\tab\par
\tab // we can write ":" instead of "->"\par
\tab char profile='x';\par
\tab switch(profile) \par
\tab\{\par
   case 'x','X' -> System.out.println("person is mard");\par
   case 'Y','y' ->System.out.println("person is stree");\par
   case 'Z','z' ->System.out.println("orry wale log");\par
   default -> System.out.println("invalid gen");\par
\tab\}\par
\tab System.out.println("------");\par
\tab\par
\tab int day=1;\par
\tab switch(day) \par
\tab\{\par
   case 1 -> System.out.println("wednesday");\par
   case 2 ->System.out.println("monday");\par
   case 3 ->System.out.println("tuesday");\par
   default -> System.out.println("invalid day");\par
\tab\}\par
\}\par
\}\par
\par
\par
package box2;\par
// ternary operator\par
//syntax:-\par
// (condition)? variable/value/expression : variable/value/expression;\par
\par
public class Ternarry_operator \{\par
public static void main(String[] args) \{\par
\tab //when we use of variable value.\par
\tab int a=25;\par
\tab int b=70;\par
\tab int max=(a>b)?a:b;\par
\tab System.out.println(max);//70\par
\tab System.out.println("------");\par
\tab\par
\tab //when we use of char value as a condition.\par
\tab int ch='A';\par
\tab int y=95;\par
\tab String res=(ch>=y)?"Kavita":"Subhash";\par
\tab System.out.println(res);//subhash\par
\tab System.out.println("------");\par
\tab\par
\tab // When we use of int value with string condition.\par
\tab int res2=("harsh"=="binita")?500:500;\par
\tab System.out.println(res2);\par
\tab System.out.println("------");\par
\tab\par
\tab // when we use condition as integer value with boolean expression.\par
\tab int price=2450;\par
\tab int bal=2000;\par
\tab boolean ans2= (price>bal) ? true:false;\par
\tab System.out.println(ans2);\par
\tab System.out.println("------");\par
\tab\par
\tab //When we use conditon as direct println ststement.\par
\tab System.out.println((45>80)?'A':'Z');//Z\par
\tab System.out.println("------");\par
\tab\par
\tab //When we use condition in double type statement.\par
\tab double d=55.55;\par
\tab double g=55.54;\par
\tab int ans =(d>g)?(40*2+60):('A'*2)-100;\par
\tab System.out.println(ans);//140\par
\tab System.out.println("------");\par
\tab\par
\tab // When we use condition as boolean value.\par
\tab boolean x =("Subhash"=="Kavita")?true:false;\par
\tab System.out.println(x);//false\par
\}\par
\}\par
\par
\par
package box2;\par
// WAJP to find maximum of three number in a single line of code?\par
public class Texture \{\par
 public static void main(String[] args) \{\par
\tab int a=20;\par
\tab int b=25;\par
\tab int c=35;\par
\tab int max = (a>b)?(a>c)?a:c : (b>c)?b:c;\par
\tab System.out.println(max);  //35 \tab\par
\}\par
\}\par
\par
\par
package box2;\par
//Logical operator (&&,||,!)\par
public class vadapav \{\par
public static void main(String[] args) \{\par
\tab int a =65;\par
\tab int b =75;\par
\tab System.out.println((a>b)&&60==60);//false\par
\tab System.out.println("Divya"=="Kirtan" && true);//false\par
\tab System.out.println(60>40 || 'A'=='Z');//true\par
\tab System.out.println(!(true));//false\par
\tab System.out.println(!('a'==97));//false\par
\tab System.out.println(!(70+30>=(60+20)&&("Meet"!="meet")));//false\par
\}\par
\}\par
\par
\par
package box3;\par
\par
public class Calci \{\par
\tab public static void add(double a, double b, double c) \{\par
\tab\tab System.out.println(a+ " + " +b+ " + " +c+  "=" +(a+b+c));\par
\tab\}\par
\tab\par
\tab public static void sub(double i , double j) \{\par
\tab\tab System.out.println(i+ "-"+j+"="+(i-j));\par
\tab\}\par
\tab\par
public static void main(String[] args) \{\par
\tab System.out.println("start");\par
\tab add(5,7,8);\par
\tab sub(5,4);\par
\tab mul(5,5);\par
\tab System.out.println("end");\par
\}\par
 public static void mul(double m, double n) \{\par
\tab System.out.println(m+"*"+n+"="+(m*n));\par
\}\par
\par
\}\par
\par
\par
package box3;\par
\par
import java.util.Scanner;\par
\par
public class Square \{\par
public static void main(String[] args) \{\par
\tab\par
\tab Scanner sc= new Scanner(System.in);\par
\tab System.out.println("enter how many time you want find square");\par
\tab int num= sc.nextInt();\par
\tab int a=1;\par
\tab System.out.println("-----");\par
\tab\par
\tab while(a<=num) \{\par
\tab\tab System.out.println("Enter a number to find square");\par
\tab\tab int i=sc.nextInt();\par
\tab\tab System.out.println("square is "+(i*i));\par
\tab\tab a++;\par
\tab\}\par
\tab System.out.println("programe end");\par
\}\par
\}\par
}
 